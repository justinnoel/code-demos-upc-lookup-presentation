---
import BaseHead from "../../components/BaseHead.astro";
import ExternalLink from "../../components/ExternalLink.astro";
import HeaderLink from "../../components/HeaderLink.astro";
import List from "../../components/List.astro";
import SlideHeader from "../../components/SlideHeader.astro";

import CloudflareLinks from "../../data/cloudflare-links.json";

type CloudflareLink = {
	link: string;
	text: string;
	data?: CloudflareLink[];
};

const title = "Cloudflare";
const description =
	"Cloudflare's suite of serveless features make developing fast, highly performant apps a breeze.";
const permalink = "https://upc-lookup-presentation.codedemos.dev/cloudflare";
---

<html lang="en">
	<head>
		<BaseHead {title} {description} {permalink} />
	</head>

	<body class=" text-gray-700 mx-auto max-w-6xl mb-32">
		<SlideHeader />
		<main class="px-8 mt-32 sm:mt-32 md:mt-16 mb-8">
			<HeaderLink
				classNames="mt-8 text-6xl"
				headerElement="h1"
				id="/slides/cloudflare"
				text="Cloudflare" />

			<p class="mt-8 text-2xl">
				<ExternalLink
					classNames="underline hover:text-yellow-700"
					linkText="Cloudflare"
					link="https://cloudflare.com" />
				is widely known as a CDN and security service for the internet. They protect
				millions of sites against DDoS and other attack vectors.
			</p>

			<p class="mt-8 text-2xl">
				Cloudflare also has a suite of tools for enterprises and developers to
				build robust, automatically scaled, and low cost "serverless"
				applications.
			</p>

			<p class="mt-8 text-2xl">
				We'll be using the following Cloudflare services:
			</p>

			<hr class="mt-16 mx-4 text-gray-300" />

			<HeaderLink
				classNames="mt-8 text-4xl"
				headerElement="h2"
				id="pages"
				text="Pages" />

			<p class="mt-8 text-2xl">
				<ExternalLink
					classNames="underline hover:text-yellow-700"
					linkText="Pages"
					link="https://pages.cloudflare.com" />
				is currently a hosting service for static sites.
			</p>

			<p class="mt-8 text-2xl">
				Using GitHub integration (others Coming Soon<sup>TM</sup>), any changes
				made on the "main" branch are automatically pushed to production.
				Changes on other branches automatically get a "preview url".
			</p>

			<p class="mt-8 text-2xl">
				All of the published sites are cached across Cloudflare's entire network
				of 250+ points of presence across the global. If your visitor is in
				Mumbai, India or Dallas, USA they will be served the content from the
				POP closest to them with virtually no latency.
			</p>

			<p class="mt-8 text-2xl">
				There are rumors of adding "API" functionality within the Pages platform
				as well. For now, see <a href="#workers">Workers</a>.
			</p>

			<hr class="mt-16 mx-4 text-gray-300" />

			<HeaderLink
				classNames="mt-8 text-4xl"
				headerElement="h2"
				id="workers"
				text="Workers" />

			<p class="mt-8 text-2xl">
				Unlike most "serveless functions" available from other providers,
				<ExternalLink
					classNames="underline hover:text-yellow-700"
					linkText="Workers"
					link="https://workers.cloudflare.com/" />
				do not use nodejs. Instead, Cloudflare used v8 Isolates. These are effectively
				instances of the Chrome JavaScript engine running in the cloud. Because of
				this, they have extremely low cold start times.
			</p>

			<p class="mt-8 text-2xl">
				In fact, the cold start times are so low that Cloudflare managed to make
				them appear to be 0ms. They did this by starting instance during the SSL
				handshake.
			</p>

			<p class="mt-8 text-2xl">
				By the time the handshake is complete, the instance is already up and
				ready to receive the request.
			</p>

			<p class="mt-8 text-2xl">
				Just like Pages, Workers are globally distributed. Code that runs
				without accessing an external service or API will respond nearly
				instanly anywhere in the world.
			</p>

			<hr class="mt-16 mx-4 text-gray-300" />

			<HeaderLink
				classNames="mt-8 text-4xl"
				headerElement="h2"
				id="workers-kv"
				text="Workers KV" />
			<p class="mt-8 text-2xl">
				<ExternalLink
					classNames="underline hover:text-yellow-700"
					linkText="Workers KV"
					link="https://www.cloudflare.com/products/workers-kv/" />
				is an extremely low latency, key-value storage service. You put data in and
				fetch data out.
			</p>

			<p class="mt-8 text-2xl">
				It's basically like a schemaless, JSON database.
			</p>

			<p class="mt-8 text-2xl">
				As with Pages and Workers, they KV data is globally distributed and
				accessible at the POP closest to your visitor.
			</p>

			<p class="mt-8 text-2xl">
				It's important to note that KV is "eventually consistent". If a user in
				Chicago triggers a Worker to update a KV, the change will be
				instantaneous in that POP for all subsequent requests. However, someone
				in Europe may not see those changes immediately. In general, global
				synchronization is completed in less than 60 seconds.
			</p>

			<p class="mt-8 text-2xl">
				If you need guaranteed consistency with transaction capability, consider
				using Cloudflare's <a
					class="underline hover:text-yellow-700"
					href="https://developers.cloudflare.com/workers/learning/using-durable-objects"
					target="_blank"
					rel="noopener noreferrer">Durable Objects</a> which is still in beta.
			</p>

			<hr class="mt-16 mx-4 text-gray-300" />

			<HeaderLink
				classNames="mt-8 text-4xl"
				headerElement="h2"
				id="cloudflare-ecosystem"
				text="Cloudflare Ecosystem" />

			<p class="mt-8 text-2xl">
				Cloudflare has a strong developer community around it. There are
				countless tools to make developing with Cloudflare a breeze. Here are a
				few examples.
			</p>

			<!-- This list componenent could be refactored to be more DRY but right
			now only needs to support 2 levels of nesting. Good enough for now! -->
			<List listClassNames="mt-4 text-xl" listElement="ul">
				{CloudflareLinks.map(({ data, link, text }: CloudflareLink) => {
					if (data) {
						return <List listClassNames="mt-4 text-xl" listElement="ul">
								{data.map(({ link, text }: CloudflareLink) => {
									return <li class="mt-8 ml-8">
											<ExternalLink classNames="underline hover:text-yellow-700" linkText={text} link={link} />
										</li>;
								})}
							</List>;
					}

					return <li class="mt-8">
							<ExternalLink classNames="underline hover:text-yellow-700" linkText={text} link={link} />
						</li>;
				})}
			</List>
		</main>
	</body>
</html>
